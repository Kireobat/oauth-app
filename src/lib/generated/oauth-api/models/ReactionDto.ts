/* tslint:disable */
/* eslint-disable */
/**
 * OAuth API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserDto } from './UserDto';
import {
    UserDtoFromJSON,
    UserDtoFromJSONTyped,
    UserDtoToJSON,
    UserDtoToJSONTyped,
} from './UserDto';

/**
 * 
 * @export
 * @interface ReactionDto
 */
export interface ReactionDto {
    /**
     * 
     * @type {number}
     * @memberof ReactionDto
     */
    id?: number;
    /**
     * 
     * @type {UserDto}
     * @memberof ReactionDto
     */
    user?: UserDto;
    /**
     * 
     * @type {number}
     * @memberof ReactionDto
     */
    blogId?: number;
    /**
     * 
     * @type {string}
     * @memberof ReactionDto
     */
    reaction?: string;
    /**
     * 
     * @type {Date}
     * @memberof ReactionDto
     */
    createdTime?: Date;
}

/**
 * Check if a given object implements the ReactionDto interface.
 */
export function instanceOfReactionDto(value: object): value is ReactionDto {
    return true;
}

export function ReactionDtoFromJSON(json: any): ReactionDto {
    return ReactionDtoFromJSONTyped(json, false);
}

export function ReactionDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReactionDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'user': json['user'] == null ? undefined : UserDtoFromJSON(json['user']),
        'blogId': json['blogId'] == null ? undefined : json['blogId'],
        'reaction': json['reaction'] == null ? undefined : json['reaction'],
        'createdTime': json['createdTime'] == null ? undefined : (new Date(json['createdTime'])),
    };
}

export function ReactionDtoToJSON(json: any): ReactionDto {
    return ReactionDtoToJSONTyped(json, false);
}

export function ReactionDtoToJSONTyped(value?: ReactionDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'user': UserDtoToJSON(value['user']),
        'blogId': value['blogId'],
        'reaction': value['reaction'],
        'createdTime': value['createdTime'] == null ? undefined : ((value['createdTime']).toISOString()),
    };
}

