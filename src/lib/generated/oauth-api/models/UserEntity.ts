/* tslint:disable */
/* eslint-disable */
/**
 * OAuth API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserEntity
 */
export interface UserEntity {
    /**
     * 
     * @type {number}
     * @memberof UserEntity
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof UserEntity
     */
    githubId?: string;
    /**
     * 
     * @type {string}
     * @memberof UserEntity
     */
    username?: string;
    /**
     * 
     * @type {string}
     * @memberof UserEntity
     */
    email?: string;
    /**
     * 
     * @type {string}
     * @memberof UserEntity
     */
    avatarUrl?: string;
    /**
     * 
     * @type {Date}
     * @memberof UserEntity
     */
    registrationDate?: Date;
}

/**
 * Check if a given object implements the UserEntity interface.
 */
export function instanceOfUserEntity(value: object): value is UserEntity {
    return true;
}

export function UserEntityFromJSON(json: any): UserEntity {
    return UserEntityFromJSONTyped(json, false);
}

export function UserEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserEntity {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'githubId': json['githubId'] == null ? undefined : json['githubId'],
        'username': json['username'] == null ? undefined : json['username'],
        'email': json['email'] == null ? undefined : json['email'],
        'avatarUrl': json['avatarUrl'] == null ? undefined : json['avatarUrl'],
        'registrationDate': json['registrationDate'] == null ? undefined : (new Date(json['registrationDate'])),
    };
}

export function UserEntityToJSON(json: any): UserEntity {
    return UserEntityToJSONTyped(json, false);
}

export function UserEntityToJSONTyped(value?: UserEntity | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'githubId': value['githubId'],
        'username': value['username'],
        'email': value['email'],
        'avatarUrl': value['avatarUrl'],
        'registrationDate': value['registrationDate'] == null ? undefined : ((value['registrationDate']).toISOString()),
    };
}

