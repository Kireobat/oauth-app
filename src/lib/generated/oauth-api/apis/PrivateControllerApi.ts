/* tslint:disable */
/* eslint-disable */
/**
 * OAuth API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CreateReviewDto,
  ReviewEntity,
} from '../models/index';
import {
    CreateReviewDtoFromJSON,
    CreateReviewDtoToJSON,
    ReviewEntityFromJSON,
    ReviewEntityToJSON,
} from '../models/index';

export interface CreateReviewRequest {
    createReviewDto: CreateReviewDto;
}

/**
 * 
 */
export class PrivateControllerApi extends runtime.BaseAPI {

    /**
     */
    async createReviewRaw(requestParameters: CreateReviewRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ReviewEntity>> {
        if (requestParameters['createReviewDto'] == null) {
            throw new runtime.RequiredError(
                'createReviewDto',
                'Required parameter "createReviewDto" was null or undefined when calling createReview().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("github", []);
        }

        const response = await this.request({
            path: `/api/v1/authenticated/reviews/create`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreateReviewDtoToJSON(requestParameters['createReviewDto']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ReviewEntityFromJSON(jsonValue));
    }

    /**
     */
    async createReview(requestParameters: CreateReviewRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ReviewEntity> {
        const response = await this.createReviewRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
